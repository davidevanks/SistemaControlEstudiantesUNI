//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SistemaControlEstudiantesUNI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ControlAlumnosEntities : DbContext
    {
        public ControlAlumnosEntities()
            : base("name=ControlAlumnosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<bitacora> bitacora { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<asignaturas> asignaturas { get; set; }
        public virtual DbSet<catalogos> catalogos { get; set; }
        public virtual DbSet<docentes> docentes { get; set; }
        public virtual DbSet<estudianteGrupo> estudianteGrupo { get; set; }
        public virtual DbSet<estudianteNotas> estudianteNotas { get; set; }
        public virtual DbSet<localidad> localidad { get; set; }
        public virtual DbSet<periodo> periodo { get; set; }
        public virtual DbSet<turnos> turnos { get; set; }
        public virtual DbSet<estudianteAsignatura> estudianteAsignatura { get; set; }
        public virtual DbSet<estudiante> estudiante { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<ListarAsignaturas_Result> ListarAsignaturas(Nullable<long> idAsignatura)
        {
            var idAsignaturaParameter = idAsignatura.HasValue ?
                new ObjectParameter("idAsignatura", idAsignatura) :
                new ObjectParameter("idAsignatura", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarAsignaturas_Result>("ListarAsignaturas", idAsignaturaParameter);
        }
    
        public virtual ObjectResult<ListarEstudiantes_Result> ListarEstudiantes(Nullable<long> idEs)
        {
            var idEsParameter = idEs.HasValue ?
                new ObjectParameter("idEs", idEs) :
                new ObjectParameter("idEs", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstudiantes_Result>("ListarEstudiantes", idEsParameter);
        }
    
        public virtual int ListarHijosEstudianteAsig(Nullable<int> ides)
        {
            var idesParameter = ides.HasValue ?
                new ObjectParameter("ides", ides) :
                new ObjectParameter("ides", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListarHijosEstudianteAsig", idesParameter);
        }
    
        public virtual int ListarEstudianteAsignatura(Nullable<int> ides)
        {
            var idesParameter = ides.HasValue ?
                new ObjectParameter("ides", ides) :
                new ObjectParameter("ides", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ListarEstudianteAsignatura", idesParameter);
        }
    
        public virtual ObjectResult<ListarEstudianteAsignatura1_Result> ListarEstudianteAsignatura1(Nullable<int> ides)
        {
            var idesParameter = ides.HasValue ?
                new ObjectParameter("ides", ides) :
                new ObjectParameter("ides", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstudianteAsignatura1_Result>("ListarEstudianteAsignatura1", idesParameter);
        }
    
        public virtual ObjectResult<ListarHijosEstudianteAsig1_Result> ListarHijosEstudianteAsig1(Nullable<int> ides)
        {
            var idesParameter = ides.HasValue ?
                new ObjectParameter("ides", ides) :
                new ObjectParameter("ides", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarHijosEstudianteAsig1_Result>("ListarHijosEstudianteAsig1", idesParameter);
        }
    
        public virtual ObjectResult<ListarDocentes_Result> ListarDocentes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarDocentes_Result>("ListarDocentes");
        }
    
        public virtual ObjectResult<ListarDataNotas_Result> ListarDataNotas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarDataNotas_Result>("ListarDataNotas");
        }
    
        public virtual ObjectResult<Nullable<int>> ValidarAsignatura(Nullable<int> idAsignatura, Nullable<int> idEstudiante)
        {
            var idAsignaturaParameter = idAsignatura.HasValue ?
                new ObjectParameter("idAsignatura", idAsignatura) :
                new ObjectParameter("idAsignatura", typeof(int));
    
            var idEstudianteParameter = idEstudiante.HasValue ?
                new ObjectParameter("idEstudiante", idEstudiante) :
                new ObjectParameter("idEstudiante", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ValidarAsignatura", idAsignaturaParameter, idEstudianteParameter);
        }
    
        public virtual ObjectResult<ListarEstudianteAsignaturaXid_Result> ListarEstudianteAsignaturaXid(Nullable<long> idEstudianteAsignatura)
        {
            var idEstudianteAsignaturaParameter = idEstudianteAsignatura.HasValue ?
                new ObjectParameter("idEstudianteAsignatura", idEstudianteAsignatura) :
                new ObjectParameter("idEstudianteAsignatura", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListarEstudianteAsignaturaXid_Result>("ListarEstudianteAsignaturaXid", idEstudianteAsignaturaParameter);
        }
    }
}
